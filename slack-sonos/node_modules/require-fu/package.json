{
  "name": "require-fu",
  "version": "1.0.0",
  "description": "Recursive injection-style requires for directories.",
  "keywords": [
    "require directory requirefu recursive"
  ],
  "homepage": "https://github.com/farmdawgnation/require-fu",
  "bugs": {
    "url": "https://github.com/farmdawgnation/require-fu/issues"
  },
  "repository": {
    "type": "git",
    "url": "http://github.com/farmdawgnation/require-fu.git"
  },
  "license": "Apache 2",
  "author": {
    "name": "Matt Farmer",
    "email": "matt@frmr.me",
    "url": "http://farmdawgnation.com"
  },
  "files": [
    "lib"
  ],
  "main": "lib/index.js",
  "engines": {
    "node": "0.10.x"
  },
  "devDependencies": {
    "mocha": "*"
  },
  "scripts": {
    "test": "./node_modules/.bin/mocha -u tdd -R spec --timeout 2000"
  },
  "readme": "# require-fu\n\n**Require-fu** is a library designed to provide dependency injection style requires recursively\nfor directories.\n\n## Introduction\n\nRequire-fu is based on the idea of dependency injection requiring. Take an express application as an example.\nOne way you might use an express app is to define an index.js in your routes directory that returns\na hash of things to wire into Express. For example:\n\n```javascript\nvar routes = require('./routes');\n\napp.get(\"/about\", routes.about);\napp.get(\"/home\", routes.home);\n```\n\nThis is less than ideal because information about how to access the code that processes the route\nis separate from the route itself. I, instead, prefer an injection approach. Like so:\n\n```javascript\nrequire('./routes')(app);\n```\n\nThe `app` parameter is passed in, and the route's index.js file is responsible for wiring everyone\nup. Or, more likely, `routes/index.js` just requires a lot of other files that would do that. So,\nI may define a `routes/index.js` like so:\n\n```javascript\nmodule.exports = function(app) {\n  require('./about')(app);\n  require('./home')(app);\n}\n```\n\nThen, my actual route files will look like:\n\n```javascript\nmodule.exports = function(app) {\n  app.get(\"/about\", function(req, res) {\n    // do things\n  });\n}\n```\n\nI like this style a lot, but with vanilla `require` it means you have to add one require line to `index.js`\nfor every handler you want to use. So, I wrote require-fu to provide an alternative.\n\n## Usage\n\nThere are a few prerequisites to this working correctly. Specifically,\n\n* You must pass the full path to the directory you want to include. (Example below.)\n* All files under that directory *must* be requirable files. (e.g. no readme's or other documents)\n\nTo use require-fu in the example I presented above, trash `routes/index.js` and do the following in\nyour root-level `app.js`:\n\n```javascript\nvar requireFu = require('require-fu');\n\nrequireFu(__dirname + '/routes')(app);\n```\n\nThe routes folder will be recursively searched for modules, and they will be required with app injected\ninto them. Moreover, you can inject as many things as you'd like.\n\n```javascript\nvar requireFu = require('require-fu');\n\nrequireFu(__dirname + '/routes')(app, jobs, db);\n```\n\n## About Me\n\nMy name is Matt Farmer. I'm a Software Engineer from Atlanta, GA. As of the time of this writing, By day I'm\na code bandit involved at Elemica and [Anchor Tab](http://acnhortab.com). By night, I'm drawing mad scientist\nlike diagrams on my whiteboard at home, thinking of new ways to take over the Internet and brew the perfect\ncup of tea.\n\nThis was inspired in part by Declan de Wet's [Pragmatic Guide to Separating\nRoutes in Express](http://declandewet.com/blog/a-pragmatic-guide-to-separating-routes-in-express.html), that\ngot me thinking about applying this concept more generally.\n",
  "readmeFilename": "README.md",
  "_id": "require-fu@1.0.0",
  "dist": {
    "shasum": "edc7a8b695bd146b3f23f783e927ca4c8fe9bd3b",
    "tarball": "http://registry.npmjs.org/require-fu/-/require-fu-1.0.0.tgz"
  },
  "_from": "require-fu@1.0.x",
  "_npmVersion": "1.3.11",
  "_npmUser": {
    "name": "farmdawgnation",
    "email": "matt@frmr.me"
  },
  "maintainers": [
    {
      "name": "farmdawgnation",
      "email": "matt@frmr.me"
    }
  ],
  "directories": {},
  "_shasum": "edc7a8b695bd146b3f23f783e927ca4c8fe9bd3b",
  "_resolved": "https://registry.npmjs.org/require-fu/-/require-fu-1.0.0.tgz"
}
